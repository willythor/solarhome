

function solarHome()


%dimensions
wallThickness = .3;
height = 3;
width = 10;
length = 10;
volume = height*width*length;
totalArea = 10*3*4 + 10*10;
areaWindow = 0;
areaWall = totalArea - areaWindow 


thermalConductivityWall = 1.4;
airSpecificHeat = 1;
airDensity = 1.2;
airMass = volume*airDensity; 
heatCapac = airSpecificHeat*airMass;


initialInnerTemp = externalTemp(24);
initialEnergy = initialInnerTemp*heatCapac;
innerTemp = initialInnerTemp;

initialTime = 1;
finalTime = 24;


    [T, U] = cool([initialTime finalTime], initialEnergy);
  
    function res = externalTemp(x)
        res = 0.00072358*x^4 + -0.03946*x^3 + 0.64248*x^2 + -2.5965*x + 6.8498 + 273;
    end

    innerTemp = energyToTemperature(U, airMass, airSpecificHeat);  

%Conductivity of Walls * (Area of Conduction/Thickness of Walls) * (Outer Temperature - Inner Temperature)


    function [T, U] = cool(timeSpan, currentEnergy)
        
        % First we're going to create a function handle that invokes
        % our netFlows function with the current mass. (See the References
        % section of Exercise Set 6 for links to documentation that
        % explains this.)
        dUdt = @(t, U) netFlows(t, U);
        
        % Now invoke ode45 with our newly created function, along with
        % the timeSpan and currentEnergy that were passed to us.
        [T, U] = ode45(dUdt, timeSpan, currentEnergy);
     
    end

    function res = netFlows(t, U)
    
        % First let's compute the temperature difference. Note that we're
        % assuming the environment remains at a constant temperature, but
        % the current temperature of the coffee is a function of its
        % internal energy.
        deltaTemperature = energyToTemperature(U, airMass, ...
            airSpecificHeat) - externalTemp(t);        
    
        % Now let's compute the conduction flow through the wall of the cup.        
        % (We are neglecting the fact that adding cream will raise the
        % liquid level slightly, increasing the area of conduction.)
        conductionFlow = thermalConductivityWall * areaWall / ...
            wallThickness * deltaTemperature;
        
        % Finally, since conduction yields a loss of energy from the
        % stock of coffee, we make it negative and return the net flow.
        res = -conductionFlow;
    end

    temp = energyToTemperature(U, airMass, airSpecificHeat);   

    plot(T, temp, 'b*-')

  


    function res = energyToTemperature(U, m, c)
        res = U / heatCapacity(m, c);  % NEW: vectorized (./ instead of /)
    end

    function res = heatCapacity(m, specHeat)
       res = m * specHeat;     % NEW: vectorized (.* instead of *)
    end

    function res = temperatureToEnergy(T, m, c)
        res = T * heatCapacity(m, c);  % NEW: vectorized (./ instead of /)
    end


end
